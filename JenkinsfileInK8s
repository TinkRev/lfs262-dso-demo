pipeline {
  agent {
    kubernetes {
      yamlFile 'build-agent.yaml'
      defaultContainer 'maven'
      idleMinutes 1
    }
  }
  parameters {
    string(name: 'IMAGE_TAG', defaultValue: 'latest', description: 'Docker Image Tag')
    booleanParam(name: 'SKIP_TESTS', defaultValue: false, description: 'Skip tests during packaging')
  }
  environment {
    ARGO_SERVER = 'argo-dev.prlab.io'
  }
  stages {
    stage('Build') {
      parallel {
        stage('Compile') {
          steps {
            container('maven') {
              sh 'mvn compile'
            }
          }
        }
      }
    }
    stage('Test') {
      parallel {
        stage('Unit Tests') {
          steps {
            container('maven') {
              sh 'mvn test'
            }
          }
        }
      }
    }
    stage('Package') {
      parallel {
        stage('Create Jarfile') {
          steps {
            container('maven') {
              sh "mvn package ${params.SKIP_TESTS ? '-DskipTests' : ''}"
            }
          }
        }
        stage("Build with Kaniko") {
          steps {
            container('kaniko') {
              sh """
                /kaniko/executor \
                  -f `pwd`/Dockerfile \
                  -c `pwd` \
                  --insecure \
                  --skip-tls-verify \
                  --cache=true \
                  --force \
                  --destination=docker.io/rhythmsyu/dso-demo:${params.IMAGE_TAG}
              """
            }
          }
        }
      }
    }
    stage('Deploy to Dev') {
       environment {
         AUTH_TOKEN = credentials('argocd-dev-sync')
       }
      steps {
        container('argocd') {
          sh 'argocd app sync dso-demo-ssc --insecure --server $ARGO_SERVER --auth-token $AUTH_TOKEN --grpc-web'
          sh 'argocd app wait dso-demo-ssc --health --timeout 300 --insecure --server $ARGO_SERVER --auth-token $AUTH_TOKEN --grpc-web'
        }
      }
    }
  }
}
